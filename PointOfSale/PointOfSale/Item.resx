<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="circularPictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        EQH/2Q==
</value>
  </data>
</root>